{"version":3,"file":"static/js/953.aee95363.chunk.js","mappings":"sUAKMA,EAAcC,IAAAA,OAAa,CAC/BC,QAFe,+BAGfC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,+GAEAL,EAAYM,IAAI,uBAFhB,cAEjBC,EAFiB,OAGfC,EAASD,EAATC,KAHe,kBAIhBA,GAJgB,gCAMvBC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GANb,yDAAH,qDAUXC,EAAc,mCAAG,WAAMC,GAAN,gGAEHX,EAAYM,IAAZ,iBAA0BK,IAFvB,cAEpBJ,EAFoB,yBAGnBA,GAHmB,gCAK1BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALV,yDAAH,sDAUdG,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAYM,IAAI,gBAAiB,CACtDH,OAAQU,IAHiB,cAErBN,EAFqB,yBAKpBA,GALoB,gCAO3BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GAPT,yDAAH,sDAWfK,EAAU,mCAAG,WAAMH,GAAN,gGAECX,EAAYM,IAAZ,iBAA0BK,EAA1B,aAFD,cAEhBJ,EAFgB,yBAGfA,GAHe,gCAKtBE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALd,yDAAH,sDASVM,EAAU,mCAAG,WAAMJ,GAAN,gGAECX,EAAYM,IAAZ,iBAA0BK,EAA1B,aAFD,cAEhBJ,EAFgB,yBAGfA,GAHe,gCAKtBE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALd,yDAAH,qD,sIClDVO,EAAkBC,EAAAA,GAAAA,GAAH,kHAKjB,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IAGCC,EAAgBL,EAAAA,GAAAA,GAAH,uCACf,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,MAAnB,I,SCRCC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,wBACGA,EAAQC,KAAI,SAAAC,GACX,OACE,UAACX,EAAD,YACE,SAACM,EAAD,UAAgBK,EAAOC,UACvB,uBAAID,EAAOE,YAFSF,EAAOhB,GAKhC,KAGN,ECXc,SAASmB,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAON,EAAP,KAAgBO,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,IAAWkB,GAASG,MAAK,SAAAC,GACvBL,EAAWK,EAAO7B,KAAK8B,QACxB,GACF,GAAE,CAACL,KAEG,yBAAMR,EAAQc,OAAS,IAAK,SAACf,EAAD,CAAaC,QAASA,KAC1D,C","sources":["components/api/api.js","components/MovieComponent/ReviewsList/ReviewsList.styled.js","components/MovieComponent/ReviewsList/ReviewsList.js","pages/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'd4083077964ed74e2ce02f9dca4a4248';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst instanceURL = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n// Trend Movies\nexport const getTrending = async () => {\n  try {\n    const response = await instanceURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Full info for movies\nexport const getMoveDetails = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n// Search movies\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instanceURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Actors from movies\nexport const getCredits = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Details from movies\nexport const getReviews = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n","import styled from 'styled-components';\n\nexport const ReviewsListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n  font-size: 10px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const ReviewerTitle = styled.h4`\n  color: ${p => p.theme.colors.accent};\n`;\n","import PropTypes from 'prop-types';\nimport { ReviewsListItem, ReviewerTitle } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <ul>\n      {reviews.map(review => {\n        return (\n          <ReviewsListItem key={review.id}>\n            <ReviewerTitle>{review.author}</ReviewerTitle>\n            <p>{review.content}</p>\n          </ReviewsListItem>\n        );\n      })}\n    </ul>\n  );\n};\nReviewsList.propTypes = {\n  reviews: PropTypes.array.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from 'components/api/api';\nimport { ReviewsList } from 'components/MovieComponent/ReviewsList/ReviewsList';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId).then(result => {\n      setReviews(result.data.results);\n    });\n  }, [movieId]);\n\n  return <div>{reviews.length > 0 && <ReviewsList reviews={reviews} />}</div>;\n}\n"],"names":["instanceURL","axios","baseURL","params","api_key","getTrending","get","response","data","toast","getMoveDetails","id","getSearchMovies","query","getCredits","getReviews","ReviewsListItem","styled","p","theme","colors","text","ReviewerTitle","accent","ReviewsList","reviews","map","review","author","content","Reviews","useState","setReviews","movieId","useParams","useEffect","then","result","results","length"],"sourceRoot":""}
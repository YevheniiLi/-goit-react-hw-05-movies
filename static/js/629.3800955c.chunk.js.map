{"version":3,"file":"static/js/629.3800955c.chunk.js","mappings":"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","sources":["components/api/api.js","pages/MoviesDetails/MoviesDetails.styled.js","components/MovieComponent/Genres/Genres.styled.js","components/MovieComponent/Genres/Genres.js","components/MovieComponent/MovieInfo/MovieInfo.styled.js","Box.js","components/MovieComponent/MovieInfo/MovieInfo.js","components/MovieComponent/BackButton/BackButton.styled.js","pages/MoviesDetails/MoviesDetails.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'd4083077964ed74e2ce02f9dca4a4248';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst instanceURL = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n// Trend Movies\nexport const getTrending = async () => {\n  try {\n    const response = await instanceURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Full info for movies\nexport const getMoveDetails = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n// Search movies\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instanceURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Actors from movies\nexport const getCredits = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Details from movies\nexport const getReviews = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n","import styled from 'styled-components';\n\nexport const MovieData = styled.div`\n  max-width: 1280px;\n`;\n\nexport const AddListItem = styled.li`\n  color: ${p => p.theme.colors.red};\n  text-transform: uppercase;\n  font-weight: 700;\n  font-size: 14px;\n  list-style: none;\n  text-decoration: none;\n  &.active {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const MoveInfoTitle = styled.h2`\n  color: ${p => p.theme.colors.red};\n  text-transform: uppercase;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${p => p.theme.colors.black};\n`;\n","import PropTypes from 'prop-types';\nimport { GenresList } from './Genres.styled';\n\nexport const Genres = ({ movieGenres }) => {\n  return (\n    <GenresList>\n      {movieGenres.map(genre => {\n        return <li key={genre.id}>{genre.name}</li>;\n      })}\n    </GenresList>\n  );\n};\n\nGenres.propTypes = {\n  movieGenres: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const MovieInfoCard = styled.div`\n  display: flex;\n  max-width: 1200px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.text};\n  border-bottom: 1px solid ${p => p.theme.colors.border};\n`;\n\nexport const MovieInfoImg = styled.img`\n  display: block;\n  width: 350px;\n  margin-right: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoTitle = styled.h1`\n  margin-bottom: 10px;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const MovieInfoWrapper = styled.div`\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.black};\n`;\n\nexport const MoviePreTitle = styled.h5`\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.red};\n  margin-bottom: 10px;\n`;\n","import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import PropTypes from 'prop-types';\nimport { Genres } from 'components/MovieComponent/Genres/Genres';\nimport {\n  MovieInfoCard,\n  MovieInfoImg,\n  MovieInfoTitle,\n  MovieInfoWrapper,\n  MoviePreTitle,\n} from './MovieInfo.styled';\nimport { Box } from 'Box';\n\nconst filmYear = value => {\n  const year = value.slice(0, 4);\n  return year;\n};\n\nconst filmRate = value => {\n  const rating = value * 10;\n  return rating.toFixed(1) + '%';\n};\n\n\nexport const MovieInfo = ({ movie }) => {\n  return (\n\n    <MovieInfoCard>\n      <MovieInfoImg\n        src={\n          movie.poster_path\n            ? 'https://image.tmdb.org/t/p/w500' + movie.poster_path\n            : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n        }\n        alt=\"\"\n      />\n      <Box display='grid' alignContent='strech'>\n        <MovieInfoTitle>\n          {movie.title}\n          {'  '}\n          <span>({filmYear(movie.release_date)})</span>\n        </MovieInfoTitle>\n        <MovieInfoWrapper>\n          Rating: <span>{filmRate(movie.vote_average)}</span>\n        </MovieInfoWrapper>\n        <MovieInfoWrapper>\n          <MoviePreTitle>Overview:</MoviePreTitle> {movie.overview}\n        </MovieInfoWrapper>\n        <MovieInfoWrapper>\n          <MoviePreTitle>Genres:</MoviePreTitle>\n          {<Genres movieGenres={movie.genres} />}\n        </MovieInfoWrapper>\n      </Box>\n    </MovieInfoCard>\n  );\n};\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport const BackButton = styled(Link)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  max-width: 80px;\n  margin-bottom: 50px;\n  padding: 10px;\n  color: ${p => p.theme.colors.red};\n  text-transform: uppercase;\n  background-color: sub;\n  border-radius: 25px;\n  box-shadow: 2px 2px 5px grey, 1px 1px 1px silver;\n  text-decoration: none;\n;\n\n  :hover {\n    color: ${p => p.theme.colors.green};\n  }\n`;\n\nexport const BackButtonIcon = styled(BiArrowBack)`\n  width: 20px;\n  height: 20px;\n  margin-right: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { getMoveDetails } from 'components/api/api';\n// import { MovieInfoBlock } from 'components/MoveInfo/MovieInfo.styled';\nimport { MoveInfoTitle } from './MoviesDetails.styled';\nimport { MovieInfo } from 'components/MovieComponent/MovieInfo/MovieInfo';\nimport {\n  BackButton,\n  BackButtonIcon,\n} from 'components/MovieComponent/BackButton/BackButton.styled';\nimport { LoaderSpinner } from 'components/Loader/Loader';\nimport { MovieData, AddListItem } from './MoviesDetails.styled';\n\nexport default function DetailsMovies() {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState();\n  const location = useLocation().state?.from ?? '/';\n\n  useEffect(() => {\n    getMoveDetails(movieId).then(result => {\n      setMovieInfo(result.data);\n    });\n  }, [movieId]);\n\n  return (\n    <MovieData>\n      <BackButton to={location}>\n        <BackButtonIcon />\n        Back\n      </BackButton>\n      {movieInfo && (\n        <div>\n          <MovieInfo movie={movieInfo} />\n          <MoveInfoTitle>Addictional information:</MoveInfoTitle>\n          <ul\n            style={{\n              display: 'flex',\n              justifyContent: 'space-evenly',\n              marginBottom: '10px',\n            }}\n          >\n            <AddListItem>\n              <Link to=\"credits\" state={{ from: location }}>\n                Cast\n              </Link>\n            </AddListItem>\n            <AddListItem>\n              <Link to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </Link>\n            </AddListItem>\n          </ul>\n          <Suspense fallback={<LoaderSpinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </MovieData>\n  );\n}\n"],"names":["instanceURL","axios","baseURL","params","api_key","getTrending","get","response","data","toast","getMoveDetails","id","getSearchMovies","query","getCredits","getReviews","MovieData","styled","AddListItem","p","theme","colors","red","green","MoveInfoTitle","GenresList","black","Genres","movieGenres","map","genre","name","MovieInfoCard","text","border","MovieInfoImg","MovieInfoTitle","MovieInfoWrapper","MoviePreTitle","Box","color","space","layout","flexbox","grid","background","position","filmRate","value","toFixed","MovieInfo","movie","src","poster_path","alt","display","alignContent","title","release_date","slice","vote_average","overview","genres","BackButton","Link","BackButtonIcon","BiArrowBack","DetailsMovies","movieId","useParams","useState","movieInfo","setMovieInfo","location","useLocation","state","from","useEffect","then","result","to","style","justifyContent","marginBottom","Suspense","fallback","Loader"],"sourceRoot":""}
{"version":3,"file":"static/js/647.44dfa204.chunk.js","mappings":"sUAKMA,EAAcC,IAAAA,OAAa,CAC/BC,QAFe,+BAGfC,OAAQ,CACNC,QALY,sCASHC,EAAW,mCAAG,+GAEAL,EAAYM,IAAI,uBAFhB,cAEjBC,EAFiB,OAGfC,EAASD,EAATC,KAHe,kBAIhBA,GAJgB,gCAMvBC,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GANb,yDAAH,qDAUXC,EAAc,mCAAG,WAAMC,GAAN,gGAEHX,EAAYM,IAAZ,iBAA0BK,IAFvB,cAEpBJ,EAFoB,yBAGnBA,GAHmB,gCAK1BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALV,yDAAH,sDAUdG,EAAe,mCAAG,WAAMC,GAAN,gGAEJb,EAAYM,IAAI,gBAAiB,CACtDH,OAAQU,IAHiB,cAErBN,EAFqB,yBAKpBA,GALoB,gCAO3BE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GAPT,yDAAH,sDAWfK,EAAU,mCAAG,WAAMH,GAAN,gGAECX,EAAYM,IAAZ,iBAA0BK,EAA1B,aAFD,cAEhBJ,EAFgB,yBAGfA,GAHe,gCAKtBE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALd,yDAAH,sDASVM,EAAU,mCAAG,WAAMJ,GAAN,gGAECX,EAAYM,IAAZ,iBAA0BK,EAA1B,aAFD,cAEhBJ,EAFgB,yBAGfA,GAHe,gCAKtBE,EAAAA,GAAAA,MAAY,sBAAuB,CAAC,GALd,yDAAH,qD,0IClDVO,EAAiBC,EAAAA,GAAAA,GAAH,uHAQdC,EAAeD,EAAAA,GAAAA,GAAH,6IASZE,EAAcF,EAAAA,GAAAA,IAAH,qGAOXG,EAAeH,EAAAA,GAAAA,EAAH,uKAOd,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,I,SCzBCC,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzB,OACE,0BACE,SAACV,EAAD,UACGU,EAAQC,KAAI,SAAAC,GACX,OACE,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IACED,EAAOE,aACH,kCAAoCF,EAAOE,aAC3C,6EAENC,IAAI,MAEN,SAACX,EAAD,UAAeQ,EAAOI,SATLJ,EAAOK,UAY7B,OAIR,ECzBc,SAASC,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRzB,EAAAA,EAAAA,IAAWuB,GAASG,MAAK,SAAAC,GACvBL,EAAWK,EAAOjC,KAAKkC,KACxB,GACF,GACD,CAACL,KAEM,8BACNX,IAAW,SAACD,EAAD,CAAUC,QAASA,KAElC,C","sources":["components/api/api.js","components/MovieComponent/CastList/CastList.styled.js","components/MovieComponent/CastList/CastList.js","pages/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst API_KEY = 'd4083077964ed74e2ce02f9dca4a4248';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst instanceURL = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n// Trend Movies\nexport const getTrending = async () => {\n  try {\n    const response = await instanceURL.get('/trending/movie/day');\n    const { data } = response;\n    return data;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Full info for movies\nexport const getMoveDetails = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n\n// Search movies\nexport const getSearchMovies = async query => {\n  try {\n    const response = await instanceURL.get('/search/movie', {\n      params: query,\n    });\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Actors from movies\nexport const getCredits = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/credits`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n// Details from movies\nexport const getReviews = async id => {\n  try {\n    const response = await instanceURL.get(`/movie/${id}/reviews`);\n    return response;\n  } catch (error) {\n    toast.error('Sorry error server!', {});\n  }\n};\n","import styled from 'styled-components';\n\nexport const CastListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  \n`;\n\nexport const CastListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: baseline;\n  max-width: 130px;\n  \n  flex-grow: 1;\n`;\n\nexport const CastListImg = styled.img`\n  display: block;\n  max-width: 100%;\n  height: 100%;\n  margin-left: 3px;\n`;\n\nexport const CastListName = styled.p`\n  display: block;\n  text-align: center;\n  font-size: 13px;\n  font-weight: 500;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  color: ${p => p.theme.colors.black};\n`;\n","import PropTypes from 'prop-types';\nimport {\n  CastListStyled,\n  CastListItem,\n  CastListImg,\n  CastListName,\n} from './CastList.styled';\n\nexport const CastList = ({ credits }) => {\n  return (\n    <div>\n      <CastListStyled>\n        {credits.map(credit => {\n          return (\n            <CastListItem key={credit.credit_id}>\n              <CastListImg\n                src={\n                  credit.profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + credit.profile_path\n                    : 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                }\n                alt=\"\"\n              />\n              <CastListName>{credit.name}</CastListName>\n            </CastListItem>\n          );\n        })}\n      </CastListStyled>\n    </div>\n  );\n};\n\nCastList.propTypes = {\n  credits: PropTypes.array.isRequired,\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCredits } from 'components/api/api';\nimport { CastList } from 'components/MovieComponent/CastList/CastList';\n\nexport default function Cast() {\n    const [credits, setCredits] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n      getCredits(movieId).then(result => {\n        setCredits(result.data.cast);\n      });\n    }, \n    [movieId]);\n\n    return <>\n    {credits && <CastList credits={credits} />}\n          </>;\n}\n"],"names":["instanceURL","axios","baseURL","params","api_key","getTrending","get","response","data","toast","getMoveDetails","id","getSearchMovies","query","getCredits","getReviews","CastListStyled","styled","CastListItem","CastListImg","CastListName","p","theme","colors","black","CastList","credits","map","credit","src","profile_path","alt","name","credit_id","Cast","useState","setCredits","movieId","useParams","useEffect","then","result","cast"],"sourceRoot":""}